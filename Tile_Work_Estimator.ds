/*
 * Author       : zohopractise
 * Generated on : 28-Apr-2025 10:28:27
 * Version      : 1.0
 */
 application "Tile Work Estimator"
 {
 	date format = "dd-MMM-yyyy"
 	time zone = "Asia/Kolkata"
 	time format = "24-hr"
 	forms
	{
		form Cllient
		{
			success message = "Data Added Successfully!"
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			plain
			(
    			type = plaintext
				value = "<div style=\"text-align: center\"><img height=\"150\" width=\"200\" style=\"max-width: 820px; height: 150px; margin: 0px; width: 200px\" class=\"sFlh5c FyHeAf iPVvYb\" src=\"https://www.seekpng.com/png/detail/265-2654347_ceramic-tiles-icon-png.png\"> <br /></div>"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Name
			(
    			type = text
	 			row = 1
	 			column = 1   
				width = medium
			)
			Phone_Number
			(
    			type = phonenumber
				displayname = "Phone"
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			Multi_Line
			(
    			type = textarea
				displayname = "Multi Line"
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			Email
			(
    			type = email
				maxchar = 80
	 			row = 1
	 			column = 1   
				width = medium
				personal data = true
			)
			Project_Status
			(
				type = picklist
				displayname = "Project Status"
				maxchar = 100
				values = {"New","Ongoing","Completed"}
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Estimate_Master
		{
			displayname = "Estimate Master"
			success message = "Estimate Master Added Successfully"
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			plain
			(
    			type = plaintext
				value = "<div style=\"text-align: center\"><img src=\"https://www.seekpng.com/png/detail/265-2654347_ceramic-tiles-icon-png.png\" class=\"sFlh5c FyHeAf iPVvYb\" style=\"max-width: 820px; height: 150px; margin: 0px; width: 200px\" width=\"200\" height=\"150\"> <br /></div>"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Estimate_ID
			(
    			type = autonumber
				displayname = "Estimate ID"
				start index = 100
	 			row = 1
	 			column = 1   
				width = medium
			)
			Cllient
			(
				type = picklist	
				values  = Cllient.ID
    			displayformat = [Name]
				sortorder = ascending
	 			row = 1
	 			column = 1   
				width = medium
			)
			Estimate_Date
			(
    			type = date
				displayname = "Estimate Date"
				alloweddays = 0,1,2,3,4,5,6
	 			row = 1
	 			column = 1   
				width = medium
			)
			Type_field
			(
				type = radiobuttons
				displayname = "Type"
				maxchar = 100
				values = {"House","Building"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Floors
			(
				type = picklist
				maxchar = 100
				values = {"2","3","4","5"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Status
			(
				type = picklist
				maxchar = 100
				values = {"Draft","Sent","Approved","Rejected"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Notes
			(
    			type = textarea
				height = 100px
	 			row = 1
	 			column = 1   
				width = medium
			)
			SubForm
			(
				type = grid
				displayname = "House"
				values  = Rooms.ID
	 			row = 2
	 			column = 1   
				width = medium
			)
			House1
			(
				type = grid
				values  = Rooms.ID
	 			row = 3
	 			column = 1   
				width = medium
			)
			House2
			(
				type = grid
				values  = Rooms.ID
	 			row = 4
	 			column = 1   
				width = medium
			)
			House3
			(
				type = grid
				values  = Rooms.ID
	 			row = 5
	 			column = 1   
				width = medium
			)
			House4
			(
				type = grid
				values  = Rooms.ID
	 			row = 6
	 			column = 1   
				width = medium
			)
			Section1
			(
				type = section
				displayname = "Section"
	 			row = 7
	 			column = 0   
				width = medium
			)
			Navigation
			(
				type = radiobuttons
				maxchar = 100
				values = {"Tile Showroom","Estimate Masters","Recent Works"}
	 			row = 7
	 			column = 1   
				width = medium
			)
			Final_Cost
			(
				type = INR
				format = commadotindian
				initial value = 0
	 			row = 7
	 			column = 1   
				width = medium
			)
			Section2
			(
				type = section
				displayname = "Section"
	 			row = 8
	 			column = 0   
				width = medium
			)
			Commission
			(
				type = INR
				format = commadotindian
	 			row = 8
	 			column = 1   
				width = medium
			)
	
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
			blueprint components
			{
				stages = {"Amount","Amount2","Stage3"}
			}
		print template
			{
				Estimate_Print_PDF
				{
							displayname = "Estimate Print PDF"
							content = {"layout":"1","pageNumberOption":null,"orientation":"null","isFooterEnabled":false,"mainLayout":[{"elements":[],"id":"1"}],"resize":"a4","templateStyle":"text-align: left; width: 793.7px; background-image: none;","isHeaderEnabled":false}
				}
				Estimate_Pdf
				{
							displayname = "Estimate Pdf"
							content = {"pageNumberOption":null,"orientation":"null","images":[{"fileName":"","imageId":"","imageType":"","fileId":""}],"imageId":"","isFooterEnabled":false,"containerStyle":"","templateStyle":"text-align: left; width: 793.7px; background-image: none","version":"2","layout":"1","mainLayout":[{"elements":[{"type":"columns","element":{"split":"100","id":"u_elem_10415937000000002","elemStyle":"","collayouts":[{"colElements":[{"type":"text","element":{"id":"u_elem_10415928999999999","fields":[],"content":"<div style=\"background: rgba(0, 0, 0, 0); padding: 0px\"><p style=\"color: rgb(0, 0, 0); font-weight: 400; font-style: normal; text-align: left\"><span><\/span><\/p><h3><br /><\/h3>\n<br /><p><\/p><\/div>"}}]}]}}],"id":1}],"resize":"a4","themeFont":"lato","isHeaderEnabled":false}
				}
			}
		}
		form Rooms
		{
			success message = "Room Added Successfully"
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Room_Name
			(
    			type = text
				displayname = "Room Name"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Tile_Size
			(
				type = picklist
				displayname = "Tile Size"
				maxchar = 100
				values = {"1x1","1x2","2x2","2x4","3x3"}
				initial value = "1x1"
	 			row = 1
	 			column = 1   
				width = medium
			)
			TIle_Type
			(
				type = picklist
				displayname = "TIle Type"
				maxchar = 100
				values = {"Matte","Glossy","Anti-skid"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Length_field
			(
				type = number
				displayname = "Length(ft)"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Width
			(
				type = number
				displayname = "Width(ft)"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Room_Area
			(
				type = number
				displayname = "Room Area"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Tile_Count
			(
				type = number
				displayname = "Tile Count"
	 			row = 1
	 			column = 1   
				width = medium
			)
			Cement_Kg
			(
				type = number
				displayname = "Cement Kg"
				initial value = 0
	 			row = 1
	 			column = 1   
				width = medium
			)
			Sand_Kg
			(
				type = number
				displayname = "Sand Kg"
				initial value = 0
	 			row = 1
	 			column = 1   
				width = medium
			)
			Room_Cost
			(
				displayname = "Room Cost"
				type = INR
				format = commadotindian
				initial value = 0
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
		form Tiles_Showroom
		{
			displayname = "Tiles Showroom"
			success message = "Data Added Successfully!"
			Section
			(
				type = section
	 			row = 1
	 			column = 0   
				width = medium
			)
			Type_field
			(
				type = picklist
				displayname = "Type"
				maxchar = 100
				values = {"Matte","Glossy","Anti-skid"}
	 			row = 1
	 			column = 1   
				width = medium
			)
			Image
			(
    			type = image
				source  = file
				aspect ratio = original
				camera = primary
				show gallery = true
				switch camera = true
	 			row = 1
	 			column = 1   
				width = medium
			)
	
			actions
			{
				on add
				{
					submit
					(
   						type = submit
   						displayname = "Submit"
					)
					reset
					(
   						type = reset
   						displayname = "Reset"
					)
				}
				on edit
				{
					update
					(
   						type = submit
   						displayname = "Update"
					)
					cancel
					(
   						type = cancel
   						displayname = "Cancel"
					)
				}
			}
		}
	}
	reports
	{
		default list Cllient_Report
		{
			displayName = "Cllient Report"
			show all rows from Cllient    
			(
				Name
				Phone_Number as "Phone"
				(
					displayformat = plainnumber 
					linktodial = enable
				)
				Multi_Line as "Multi Line"
				Email
				Project_Status as "Project Status"
			)
		}
		default list All_Estimate_Masters
		{
			displayName = "All Estimate Masters"
			show all rows from Estimate_Master    
			(
				Estimate_ID as "Estimate ID"
				Cllient
				Estimate_Date as "Estimate Date"
				Status
				Notes
				Final_Cost
				Type_field as "Type"
				Floors
				Commission
				custom action "Update"
				(
	  			workflow = Update
				show action in edit record menu = true
				column header = "Update"
				)
				Navigation
			)
		}
		default list All_Rooms
		{
			displayName = "All Rooms"
			show all rows from Rooms    
			(
				Room_Name as "Room Name"
				Length_field as "Length(ft)"
				Width as "Width(ft)"
				Tile_Size as "Tile Size"
				TIle_Type as "TIle Type"
				Room_Area as "Room Area"
				Tile_Count as "Tile Count"
				Cement_Kg as "Cement Kg"
				Sand_Kg as "Sand Kg"
				Room_Cost as "Room Cost"
			)
		}
		list Recent_Works
		{
			displayName = "Recent_Works"
			show all rows from Estimate_Master  [Status == "Approved"]  
			(
				Estimate_ID as "Estimate ID"
				Cllient
				Estimate_Date as "Estimate Date"
				Status
				Notes
				Final_Cost
				Type_field as "Type"
				Floors
				Commission
				custom action "Update"
				(
	  			workflow = Update
				show action in edit record menu = true
				column header = "Update"
				)
				Navigation
			)
		}
		default custom Tiles_Showroom_Report
		{
			displayName = "Tiles Showroom Report"
			show all rows from Tiles_Showroom    
			(
				Type_field as "Type"
				Image
			)
			customlayouts
			(
				template
	 			(
	 	  			displayname="Custom Layout 1"
	 	  			content="<panel  \n >\n	<pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		padding = '0px'\n	bgColor = '#FFFFFF'\n\n		width = '100%'\n		hAlign = 'center'\n		vAlign = 'middle'\n>\n	<pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		padding = '0px'\n\n		width = '50%'\n		hAlign = 'center'\n		vAlign = 'middle'\n>\n	<pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		padding = '17px'\n\n		width = '100%'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<image  \n		marginLeft = '0px'\n	marginRight = '0px' \n	marginBottom = '0px'\n	marginTop = '0px'\n\n	color = '#FFFFFF'\n	bgColor = '#000000'\n	width = '23.6px'\n	height = '23.6px'\n	type = 'icon'\n	value = 'ui-1-check-bold'\n	size = '22px'\n	cornerRadius = '11.8px'\n	iconType = 'outline'\n/>\n</pc>\n</pr>\n</pc>\n</pr><pr \n			width='fill'\n		height='fill'\n>\n	<pc \n		paddingTop = '0px'\n	paddingLeft = '17px'\n	paddingRight = '17px'\n	paddingBottom = '17px'\n\n		width = '100%'\n		hAlign = 'center'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<text \n\n	marginLeft = '0px'\n	marginRight = '0px' \n	marginBottom = '0px'\n	marginTop = '0px'\n	color = '#000000'\n	size = '15px'\n	uppercase = 'false' \n	underline = 'false' \n	bold = 'true' \n	italic = 'false' \n	type = 'field'\n\n\n\n	  \n      	lineHeight = '20'\n      	  numOfLines = '1'\n	  value = 'Type_field'\n>\n</text>\n\n</pc>\n</pr>\n</pc>\n</pr>\n</pc><pc \n		paddingTop = '17px'\n	paddingLeft = '0px'\n	paddingRight = '17px'\n	paddingBottom = '17px'\n	bgColor = '#000000'\n\n		width = '50%'\n		hAlign = 'center'\n		vAlign = 'middle'\n>\n	<pr \n			width='auto'\n		height='auto'\n>\n	<pc \n	\n>\n	<image  \n		marginLeft = '0px'\n	marginRight = '0px' \n	marginBottom = '0px'\n	marginTop = '0px'\n\n	color = '#FFFFFF'\n	width = '110px'\n	height = '110px'\n	type = 'field'\n	value = 'Image'\n	cornerRadius = '0px'\n/>\n</pc>\n</pr>\n</pc>\n</pr>\n</pc>\n</pr>\n</panel>"
	    		)
			)
		}
	}
	pages
	{
		page Visual_App
		{
			displayname = "Visual_App"
			Content="<zml    \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='html_snippet' elementName=\"HTML Snippet\"\n bgColor=\"#FFFFFF\" \n>\n\t<![CDATA[htmlpage html_snippet()\ncontent\n&lt;%{\n\t%&gt;\n&lt;style&gt;\n\n form.form-table{\n\t background-size:cover !important;\n\t background-image: linear-gradient(rgba(255, 255, 255, 0.5), rgba(255, 255, 255, 0.5)), url(&quot;https:\/\/images.pexels.com\/photos\/1437493\/pexels-photo-1437493.jpeg?auto=compress&amp;cs=tinysrgb&amp;w=1260&amp;h=750&amp;dpr=2&quot;)!important;\n\t display: flex; \/* Turns the form container into a flex container *\/\n    flex-direction: column; \/* Aligns the fields vertically *\/\n    justify-content: center; \/* Centers the fields vertically *\/\n    align-items: center; \/* Centers the fields horizontally *\/\n    width: 100%; \/* Ensures the form fills the width of the page *\/\n    margin: auto;\n }\n\n &lt;\/style&gt;\n&lt;div elname=&apos;zc-component&apos; formLinkName=&apos;Estimate_Master&apos; \n params=&apos;zc_SuccMsg=Data Added Succesfully!&apos;&gt;Loading form...\n &lt;\/div&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>"
		}
		page Visual
		{
			displayname = "Visual"
			Content="<zml    \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<dsp id='html_snippet1' elementName=\"HTML Snippet\"\n bgColor=\"#FFFFFF\" \n>\n\t<![CDATA[htmlpage html_snippet1()\ncontent\n&lt;%{\n\t%&gt;\n&lt;style&gt;\n\/* Reset margins and padding for the entire page *\/\nhtml, body {\n    margin: 0; \/* Removes default margin *\/\n    padding: 0; \/* Removes default padding *\/\n    height: 100%; \/* Ensures page fills the viewport *\/\n}\n\n\/* Ensure the form container fills the full page *\/\nform.form-table {\n    background-size: cover !important;\n    background-image: url(&quot;https:\/\/images.pexels.com\/photos\/1437493\/pexels-photo-1437493.jpeg?auto=compress&amp;cs=tinysrgb&amp;w=1260&amp;h=750&amp;dpr=2&quot;) !important;\n    background-repeat: no-repeat; \/* Prevents repetition *\/\n    background-position: center; \/* Centers the image *\/\n    display: flex; \/* Turns the form container into a flex container *\/\n    flex-direction: column; \/* Aligns the fields vertically *\/\n    justify-content: center; \/* Centers content vertically *\/\n    align-items: center; \/* Centers content horizontally *\/\n    width: 100%; \/* Ensures full width coverage *\/\n    height: 100%; \/* Ensures full height coverage *\/\n    min-height: 100vh; \/* Ensures minimum height matches viewport height *\/\n    margin: 0; \/* Removes any container margin *\/\n}\n&lt;\/style&gt;\n&lt;div elname=&apos;zc-component&apos; formLinkName=&apos;Cllient&apos; \n params=&apos;zc_SuccMsg=Data Added Successfully!&apos;&gt;Loading form...\n &lt;\/div&gt;\n&lt;%\n\n}%&gt;]]>\n<\/dsp>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>"
		}
		page Dashboard
		{
			displayname = "Dashboard"
			Content="<zml    \t\t\n\t\t\n\t\t\n\t\t\n\t\t\n>\n\t<layout>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<row>\n\t<column\n   \t\t width=\"25%\"\n   \t>\n\t<panel elementName=\"Panel\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\n\t\twidth = '100%'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='50px'\n>\n\t<pc \n\t\tpadding = '0px'\n\tbgColor = '#BDC9F3'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginLeft = '20px'\n\tmarginRight = '20px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\tcolor = '#2D2D2D'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Draft'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#4C7DE8'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<image  \n\t\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\n\tcolor = '#2A70E7'\n\tbgColor = '#FFFFFF'\n\twidth = '52px'\n\theight = '52px'\n\ttype = 'icon'\n\tvalue = 'business-handout'\n\tsize = '32px'\n\tcornerRadius = '26px'\n\ticonType = 'solid'\n\/>\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '5px'\n\tcolor = '#FFFFFF'\n\tsize = '33px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = 'LOCALE'\n\tdecimalSeperator = 'DOT'\n\tnumberScale = 'none'\n\n\n\t  \n\t\tcriteria = 'Status == &quot;Draft&quot;'\n\t  value = 'thisapp.Estimate_Master.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"25%\"\n   \t>\n\t<panel elementName=\"Panel 1\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\n\t\twidth = '100%'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='50px'\n>\n\t<pc \n\t\tpadding = '0px'\n\tbgColor = '#BDC9F3'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginLeft = '20px'\n\tmarginRight = '20px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\tcolor = '#2D2D2D'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Sent'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#2A70E7'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<image  \n\t\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\n\tcolor = '#4C7DE8'\n\tbgColor = '#FFFFFF'\n\twidth = '52px'\n\theight = '52px'\n\ttype = 'icon'\n\tvalue = 'business-coins'\n\tsize = '32px'\n\tcornerRadius = '26px'\n\ticonType = 'outline'\n\/>\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '5px'\n\tcolor = '#FFFFFF'\n\tsize = '33px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = 'LOCALE'\n\tdecimalSeperator = 'DOT'\n\tnumberScale = 'none'\n\n\n\t  \n\t\tcriteria = 'Status == &quot;Sent&quot;'\n\t  value = 'thisapp.Estimate_Master.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"25%\"\n   \t>\n\t<panel elementName=\"Panel 2\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\n\t\twidth = '100%'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='50px'\n>\n\t<pc \n\t\tpadding = '0px'\n\tbgColor = '#BDC9F3'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginLeft = '20px'\n\tmarginRight = '20px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\tcolor = '#2D2D2D'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Approved'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#2A70E7'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<image  \n\t\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\n\tcolor = '#2A70E7'\n\tbgColor = '#FFFFFF'\n\twidth = '52px'\n\theight = '52px'\n\ttype = 'icon'\n\tvalue = 'education-paper'\n\tsize = '32px'\n\tcornerRadius = '26px'\n\ticonType = 'outline'\n\/>\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '5px'\n\tcolor = '#FFFFFF'\n\tsize = '33px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = 'LOCALE'\n\tdecimalSeperator = 'DOT'\n\tnumberScale = 'none'\n\n\n\t  \n\t  value = 'thisapp.Estimate_Master.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column><column\n   \t\t width=\"25%\"\n   \t>\n\t<panel elementName=\"Panel 3\"\n \n >\n\t<pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\n\t\twidth = '100%'\n>\n\t<pr \n\t\t\twidth='fill'\n\t\theight='50px'\n>\n\t<pc \n\t\tpadding = '0px'\n\tbgColor = '#BDC9F3'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginLeft = '20px'\n\tmarginRight = '20px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\tcolor = '#2D2D2D'\n\tsize = '16px'\n\ttype = 'Text'\n\n\n\n\t  \n\t  value = 'Rejected'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr><pr \n\t\t\twidth='fill'\n\t\theight='fill'\n>\n\t<pc \n\t\tpadding = '20px'\n\tbgColor = '#2A70E7'\n\n\t\twidth = '100%'\n\t\thAlign = 'center'\n\t\tvAlign = 'middle'\n>\n\t<pr \n\t\t\twidth='auto'\n\t\theight='auto'\n>\n\t<pc \n\t\tpadding = '5px'\n\n>\n\t<pr \n\t>\n\t<pc \n\t\n>\n\t<image  \n\t\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '0px'\n\n\tcolor = '#2A70E7'\n\tbgColor = '#FFFFFF'\n\twidth = '52px'\n\theight = '52px'\n\ttype = 'icon'\n\tvalue = 'ui-2-ban'\n\tsize = '32px'\n\tcornerRadius = '26px'\n\ticonType = 'solid'\n\/>\n<\/pc>\n<\/pr><pr \n\t>\n\t<pc \n\t\n>\n\t<text \n\n\tmarginLeft = '0px'\n\tmarginRight = '0px' \n\tmarginBottom = '0px'\n\tmarginTop = '5px'\n\tcolor = '#FFFFFF'\n\tsize = '33px'\n\tbold = 'true' \n\ttype = 'Form Data'\n\n\tdisplayType = 'actual'\n\tthousandsSeperator = 'LOCALE'\n\tdecimalSeperator = 'DOT'\n\tnumberScale = 'none'\n\n\n\t  \n\t\tcriteria = 'Status == &quot;Rejected&quot;'\n\t  value = 'thisapp.Estimate_Master.ID.count'\n>\n<\/text>\n\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/pc>\n<\/pr>\n<\/panel>\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"50%\"\n   \t>\n\t<chart \n\telementName=\"Chart\"\n\n\ttype = 'Bar'\n\txtitle = 'Name'\n\tytitle = 'Cost'\n\tbgColor = '#FFFFFF'\n\ttheme = 'theme2'\n\tlegendPos = 'center.top'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'Estimate_Master'\n\txfield = 'Cllient.Name'\n\tyfields = 'sum:Final_Cost'\n\/>\n\n<\/column><column\n   \t\t width=\"50%\"\n   \t>\n\t<row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<chart \n\telementName=\"Chart 1\"\n\n\ttype = 'Pie'\n\txtitle = 'Final Cost'\n\tytitle = 'Name'\n\tbgColor = '#FFFFFF'\n\ttheme = 'theme2'\n\tlegendPos = 'center.top'\n\tappLinkName = 'thisapp'\n\tformLinkName = 'Estimate_Master'\n\txfield = 'Cllient.Name'\n\tyfields = 'sum:Final_Cost'\n\/>\n\n<\/column>\n<\/row><row>\n\t<column\n   \t\t width=\"100%\"\n   \t>\n\t<report \n\telementName=\"Report\"\n\n\t\tappLinkName = 'thisapp'\n\t\tlinkName = 'Cllient_Report'\n\t\n\t\tiszreport = 'false'\n\n\/>\n<\/column>\n<\/row>\n<\/column>\n<\/row>\n<\/column>\n<\/row>\n<\/layout>\n<\/zml>"
		}
	}


		workflow
		{
		form
		{
			Fieldrules_House as "Fieldrules_House"
			{
				type =  form
				form = Estimate_Master
				record event = on add or edit

				field rules
				{
					actions  (Floors == "2")
					{
						hide House2,House3,House4;
						show SubForm,House1;
					}
					actions  (Floors == "3")
					{
						hide House3,House4;
						show SubForm,House1,House2;
					}
					actions  (Floors == "4")
					{
						show SubForm,House1,House2,House3;
						hide House4;
					}
					actions  (Floors == "5")
					{
						show SubForm,House1,House2,House3,House4;
					}
					actions 
					{
						hide House1,House2,House3,House4;
						show SubForm;
					}
				}

			}
			FieldRule_Btype as "FieldRule_Btype"
			{
				type =  form
				form = Estimate_Master
				record event = on add or edit

				field rules
				{
					actions 
					{
						hide Floors;
					}
					actions  (Type_field == "Building")
					{
						show Floors;
					}
				}

			}
			Calculate_Room_Area as "Calculate_Room_Area"
			{
				type =  form
				form = Rooms
				record event = on add or edit

				on user input of Width
				{
					actions 
					{
						custom deluge script
						(
											// 1. Calculate Room Area
										input.Room_Area = input.Length_field * input.Width;
										// 2. Define tile area based on Tile Size string
										tile_area = 1;
										if(input.Tile_Size == "1x1")
										{
											tile_area = 1;
										}
										else if(input.Tile_Size == "1x2")
										{
											tile_area = 2;
										}
										else if(input.Tile_Size == "2x2")
										{
											tile_area = 4;
										}
										else if(input.Tile_Size == "2x4")
										{
											tile_area = 8;
										}
										else if(input.Tile_Size == "3x3")
										{
											tile_area = 9;
										}
										else
										{
											tile_area = 1;
											// fallback
										}
										// 3. Calculate number of tiles required (Room Area / Tile Area)
										Tile_Counts = ceil(input.Room_Area / tile_area);
										input.Tile_Count = 0 + Tile_Counts;
										// 4. Cement and Sand Calculation (based on tile count)
										input.Cement_Kg = input.Tile_Count * 0.25;
										// 0.25 kg per tile
										input.Sand_Kg = input.Tile_Count * 0.5;
										// 0.5 kg per tile
										// 5. Optional Room Cost (if rate fixed)
										input.Room_Cost = input.Tile_Count * 45;
										// Rs. 45 per tile (change if needed)
						)
					}
				}

			}
			workflow2 as "workflow2"
			{
				type =  form
				form = Estimate_Master
				record event = on add or edit

				on user input of SubForm.Width
				{
					actions 
					{
						custom deluge script
						(
											// 1. Calculate Room Area
										row.Room_Area=row.Length_field * row.Width;
										// 2. Define tile area based on Tile Size string
										tile_area = 1;
										if(row.Tile_Size == "1x1")
										{
											tile_area = 1;
										}
										else if(row.Tile_Size == "1x2")
										{
											tile_area = 2;
										}
										else if(row.Tile_Size == "2x2")
										{
											tile_area = 4;
										}
										else if(row.Tile_Size == "2x4")
										{
											tile_area = 8;
										}
										else if(row.Tile_Size == "3x3")
										{
											tile_area = 9;
										}
										else
										{
											tile_area = 1;
											// fallback
										}
										// 3. Calculate number of tiles required
										tile_count = ceil(row.Room_Area / tile_area);
										row.Tile_Count=tile_count;
										// 4. Cement and Sand Calculation
										row.Cement_Kg=row.Tile_Count * 0.25;
										row.Sand_Kg=row.Tile_Count * 0.5;
										// 5. Optional Room Cost
										row.Room_Cost=row.Tile_Count * 45;
										input.Final_Cost = input.Final_Cost + row.Room_Cost;
						)
					}
				}

			}
			total as "total"
			{
				type =  form
				form = Estimate_Master
				record event = on add or edit

				on user input of SubForm.Room_Cost
				{
					actions 
					{
						custom deluge script
						(
											input.Final_Cost = input.Final_Cost + row.Room_Cost;
						)
					}
				}

			}
			house1 as "house1"
			{
				type =  form
				form = Estimate_Master
				record event = on add or edit

				on user input of House1.Width
				{
					actions 
					{
						custom deluge script
						(
											// 1. Calculate Room Area
										row.Room_Area=row.Length_field * row.Width;
										// 2. Define tile area based on Tile Size string
										tile_area = 1;
										if(row.Tile_Size == "1x1")
										{
											tile_area = 1;
										}
										else if(row.Tile_Size == "1x2")
										{
											tile_area = 2;
										}
										else if(row.Tile_Size == "2x2")
										{
											tile_area = 4;
										}
										else if(row.Tile_Size == "2x4")
										{
											tile_area = 8;
										}
										else if(row.Tile_Size == "3x3")
										{
											tile_area = 9;
										}
										else
										{
											tile_area = 1;
											// fallback
										}
										// 3. Calculate number of tiles required
										tile_count = ceil(row.Room_Area / tile_area);
										row.Tile_Count=tile_count;
										// 4. Cement and Sand Calculation
										row.Cement_Kg=row.Tile_Count * 0.25;
										row.Sand_Kg=row.Tile_Count * 0.5;
										// 5. Optional Room Cost
										row.Room_Cost=row.Tile_Count * 45;
										input.Final_Cost = input.Final_Cost + row.Room_Cost;
						)
					}
				}

			}
			House2 as "House2"
			{
				type =  form
				form = Estimate_Master
				record event = on add or edit

				on user input of House2.Width
				{
					actions 
					{
						custom deluge script
						(
											// 1. Calculate Room Area
										row.Room_Area=row.Length_field * row.Width;
										// 2. Define tile area based on Tile Size string
										tile_area = 1;
										if(row.Tile_Size == "1x1")
										{
											tile_area = 1;
										}
										else if(row.Tile_Size == "1x2")
										{
											tile_area = 2;
										}
										else if(row.Tile_Size == "2x2")
										{
											tile_area = 4;
										}
										else if(row.Tile_Size == "2x4")
										{
											tile_area = 8;
										}
										else if(row.Tile_Size == "3x3")
										{
											tile_area = 9;
										}
										else
										{
											tile_area = 1;
											// fallback
										}
										// 3. Calculate number of tiles required
										tile_count = ceil(row.Room_Area / tile_area);
										row.Tile_Count=tile_count;
										// 4. Cement and Sand Calculation
										row.Cement_Kg=row.Tile_Count * 0.25;
										row.Sand_Kg=row.Tile_Count * 0.5;
										// 5. Optional Room Cost
										row.Room_Cost=row.Tile_Count * 45;
										input.Final_Cost = input.Final_Cost + row.Room_Cost;
						)
					}
				}

			}
			House3 as "House3"
			{
				type =  form
				form = Estimate_Master
				record event = on add or edit

				on user input of House3.Width
				{
					actions 
					{
						custom deluge script
						(
											// 1. Calculate Room Area
										row.Room_Area=row.Length_field * row.Width;
										// 2. Define tile area based on Tile Size string
										tile_area = 1;
										if(row.Tile_Size == "1x1")
										{
											tile_area = 1;
										}
										else if(row.Tile_Size == "1x2")
										{
											tile_area = 2;
										}
										else if(row.Tile_Size == "2x2")
										{
											tile_area = 4;
										}
										else if(row.Tile_Size == "2x4")
										{
											tile_area = 8;
										}
										else if(row.Tile_Size == "3x3")
										{
											tile_area = 9;
										}
										else
										{
											tile_area = 1;
											// fallback
										}
										// 3. Calculate number of tiles required
										tile_count = ceil(row.Room_Area / tile_area);
										row.Tile_Count=tile_count;
										// 4. Cement and Sand Calculation
										row.Cement_Kg=row.Tile_Count * 0.25;
										row.Sand_Kg=row.Tile_Count * 0.5;
										// 5. Optional Room Cost
										row.Room_Cost=row.Tile_Count * 45;
										input.Final_Cost = input.Final_Cost + row.Room_Cost;
						)
					}
				}

			}
			House4 as "House4"
			{
				type =  form
				form = Estimate_Master
				record event = on add or edit

				on user input of House4.Width
				{
					actions 
					{
						custom deluge script
						(
											// 1. Calculate Room Area
										row.Room_Area=row.Length_field * row.Width;
										// 2. Define tile area based on Tile Size string
										tile_area = 1;
										if(row.Tile_Size == "1x1")
										{
											tile_area = 1;
										}
										else if(row.Tile_Size == "1x2")
										{
											tile_area = 2;
										}
										else if(row.Tile_Size == "2x2")
										{
											tile_area = 4;
										}
										else if(row.Tile_Size == "2x4")
										{
											tile_area = 8;
										}
										else if(row.Tile_Size == "3x3")
										{
											tile_area = 9;
										}
										else
										{
											tile_area = 1;
											// fallback
										}
										// 3. Calculate number of tiles required
										tile_count = ceil(row.Room_Area / tile_area);
										row.Tile_Count=tile_count;
										// 4. Cement and Sand Calculation
										row.Cement_Kg=row.Tile_Count * 0.25;
										row.Sand_Kg=row.Tile_Count * 0.5;
										// 5. Optional Room Cost
										row.Room_Cost=row.Tile_Count * 45;
										input.Final_Cost = input.Final_Cost + row.Room_Cost;
						)
					}
				}

			}
			hide_Commission as "hide_Commission"
			{
				type =  form
				form = Estimate_Master
				record event = on add or edit

				field rules
				{
					actions 
					{
						hide Commission;
					}
				}

			}
			navigation as "navigation"
			{
				type =  form
				form = Estimate_Master
				record event = on add or edit

				on user input of Navigation
				{
					actions 
					{
						custom deluge script
						(
											if(input.Navigation == "Tile Showroom")
										{
											openUrl("#Report:Tiles_Showroom_Report","popup window","height=800,width=800");
										}
										else if(input.Navigation == "Estimate Masters")
										{
											openUrl("#Report:All_Estimate_Masters","popup window","height=800,width=800");
										}
										else if(input.Navigation == "Recent Works")
										{
											openUrl("#Report:Recent_Works","popup window","height=800,width=800");
										}
						)
					}
				}

			}
		}




		blueprint
		{
    			Commission as "Commission"
    			{
        			type = Blueprint
        			form = Estimate_Master
        			start
        			{
            			start stage = "Amount"
            			chart data
            			{
                			from port : B
                			to port   : T3
                			position  : "0 0"
                			path      : [27.849999999999994,36.84,27.849999999999994,46.84,27.849999999999994,48.42,31.61599884033203,48.42,31.61599884033203,50,31.61599884033203,60]
            			}
        			}
        			stages
        			{
           			"Amount"
           			{
               			chart data
               			{
                   			position : "-15.223052470852995 60"
               			}
           			}
           			"Amount2"
           			{
               			chart data
               			{
                   			position : "-172 135.66675041876047"
               			}
           			}
        			}
        			transitions
        			{
    				Reference as "Reference"
    				{
         				type = normal
         				from stage = "Amount"
         				to stage = "Amount2"
         				before
         				{
         				}
         				after
         				{
							actions 
							{
								custom deluge script
								(
															commi_amount = input.Final_Cost * 0.25;
														input.Commission = commi_amount;
								)
							}
         				}
         				chart data
         				{
             				from port : L1
             				to port   : T3
             				path      : [-15.223052470852995,85.80391489761081,-25.223052470852995,85.80391489761081,-121.10095113022123,85.80391489761081,-121.10095113022123,105.73533265818564,-121.10095113022123,125.66675041876047,-121.10095113022123,135.66675041876047]
        				}
  				}
        			}
    			}
		}


		functions
		{
			new_workflow as "new"
			{
				type =  functions
				form = Estimate_Master
				execution type = for each record	
				on start
				{
				}
			}
			Update as "Update"
			{
				type =  functions
				form = Estimate_Master
				execution type = for each record	
				on start
				{
					actions 
					{
					on click
					(
						input.Status = 'Completed';
					)
					}
				}
			}
		}
	}
	share_settings
	{
			"Read"
			{
				name = "Read"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have read permission for all components\n"
			}
			"Write"
			{
				name = "Write"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have write permission for all components\n"
			}
			"Developer"
			{
				name = "Developer"
				type = Developer
				permissions = {Chat:false, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "Developer Profile\n"
			}
			"Administrator"
			{
				name = "Administrator"
				type = Users_Permissions
				permissions = {Chat:true, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This profile will have all the permissions.\n"
			}
			"Customer"
			{
				name = "Customer"
				type = Customer_Portal
				permissions = {Chat:true, Predefined:true, ApiAccess:true, PIIAccess:true, ePHIAccess:true}
				description = "This is the default profile having only add and view permission.\n"
			}
			roles
			{
				"CEO"
				{
					description = "User belonging to this role can access data of all other users."
				}
			}
	}


	web
	{
		forms
		{
			form Cllient
			{
				label placement = left
			}
			form Estimate_Master
			{
				label placement = left
			}
			form Rooms
			{
				label placement = left
			}
			form Tiles_Showroom
			{
				label placement = left
			}
		}
		reports
		{
			report Cllient_Report
			{
				quickview
				(
					layout
					(
		 				type = -1
						datablock1
						(
							layout type = -1
							fields
							(
								Name
								Phone_Number as "Phone"
								Multi_Line as "Multi Line"
								Email
								Project_Status as "Project Status"
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
						record
						(
							Edit   	   
							Duplicate   	   
							Delete   	   
    					)
    				)
    				action
    				(
						on click
						(
							View Record   	   
    					)
						on right click
						(
							Edit   	   
							Delete   	   
							Duplicate   	   
							View Record   	   
    					)
     				)
				)

				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
							layout type = -2
							fields
							(
								Name
								Phone_Number as "Phone"
								Multi_Line as "Multi Line"
								Email
								Project_Status as "Project Status"
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			report All_Estimate_Masters
			{
				quickview
				(
					layout
					(
		 				type = -1
						datablock1
						(
							layout type = -1
							fields
							(
								Estimate_ID as "Estimate ID"
								Cllient
								Estimate_Date as "Estimate Date"
								Final_Cost
								Type_field as "Type"
								Status
								Commission
								"Update"
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
						record
						(
							Edit   	   
							Duplicate   	   
							Delete   	   
    					)
    				)
    				action
    				(
						on click
						(
							View Record   	   
    					)
						on right click
						(
							Edit   	   
							Delete   	   
							Duplicate   	   
							View Record   	   
    					)
     				)
				)

				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
							layout type = -2
							fields
							(
								Estimate_ID as "Estimate ID"
								Cllient
								Estimate_Date as "Estimate Date"
								Status
								Notes
								Final_Cost
								Type_field as "Type"
								Floors
								Commission
								Navigation
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    	 				)
    				)
				)
			}
			report All_Rooms
			{
				quickview
				(
					layout
					(
		 				type = -1
						datablock1
						(
							layout type = -1
							fields
							(
								Room_Name as "Room Name"
								Length_field as "Length(ft)"
								Width as "Width(ft)"
								Tile_Size as "Tile Size"
								TIle_Type as "TIle Type"
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
						record
						(
							Edit   	   
							Duplicate   	   
							Delete   	   
    					)
    				)
    				action
    				(
						on click
						(
							View Record   	   
    					)
						on right click
						(
							Edit   	   
							Delete   	   
							Duplicate   	   
							View Record   	   
    					)
     				)
				)

				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
							layout type = -2
							fields
							(
								Room_Name as "Room Name"
								Length_field as "Length(ft)"
								Width as "Width(ft)"
								Tile_Size as "Tile Size"
								TIle_Type as "TIle Type"
								Room_Area as "Room Area"
								Tile_Count as "Tile Count"
								Cement_Kg as "Cement Kg"
								Sand_Kg as "Sand Kg"
								Room_Cost as "Room Cost"
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
			report Recent_Works
			{
				quickview
				(
					layout
					(
		 				type = -1
						datablock1
						(
							layout type = -1
							fields
							(
								Estimate_ID as "Estimate ID"
								Cllient
								Estimate_Date as "Estimate Date"
								Final_Cost
								Type_field as "Type"
								Status
								Commission
								"Update"
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
						record
						(
							Edit   	   
							Duplicate   	   
							Delete   	   
    					)
    				)
    				action
    				(
						on click
						(
							View Record   	   
    					)
						on right click
						(
							Edit   	   
							Delete   	   
							Duplicate   	   
							View Record   	   
    					)
     				)
				)

				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
							layout type = -2
							fields
							(
								Estimate_ID as "Estimate ID"
								Cllient
								Estimate_Date as "Estimate Date"
								Status
								Notes
								Final_Cost
								Type_field as "Type"
								Floors
								Commission
								Navigation
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    	 				)
    				)
				)
			}
			report Tiles_Showroom_Report
			{
				quickview
				(
					layout
					(
		 				type = Custom
		 				selectedlayout = "Custom Layout 1"
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
						record
						(
							Edit   	   
							Duplicate   	   
							Delete   	   
    					)
    				)
    				action
    				(
						on click
						(
							View Record   	   
    					)
						on right click
						(
							Edit   	   
							Delete   	   
							Duplicate   	   
							View Record   	   
    					)
     				)
				)

				detailview
				(
					layout
					(
		 				type = 1
						datablock1
						(
							layout type = -2
							fields
							(
								Type_field as "Type"
								Image
							)
						)
					)
					menu
    				(
    	 				header
    	 				(
    		 				Edit 
    		 				Duplicate 
    		 				Delete 
    	 				)
    				)
				)
			}
		}
		menu
		{
			unused
			{
				form  Cllient
				{
					icon = "tech-desktop"
				}
				systemcomponent
				{
					type = localization
					displayname = "Language Selection"
					icon = "education-language"
				}
				systemcomponent
				{
					type = connection
					displayname = "Connection"
					icon = "tech-2-connection"
				}
				systemcomponent
				{
					type = approval
					approval status = pending
					displayname = "Pending Tasks"
					icon = "ui-2-hourglass"
				}
				systemcomponent
				{
					type = approval
					approval status = completed
					displayname = "Completed Tasks"
					icon = "design-todo"
				}
				form  Rooms
				{
					icon = "furniture-table"
				}
				report All_Rooms
				{
					icon = "tech-desktop"
				}
				form  Tiles_Showroom
				{
					icon = "ui-2-tile-56"
				}
				report Tiles_Showroom_Report
				{
					icon = "tech-desktop"
				}
				form  Estimate_Master
				{
					icon = "sport-crown"
				}
				section SharedAnalytics_Section
				{
					type = shared_user_report_section
					displayname = "Reports"
					icon = "business-chart-bar-33"
				}
			}
			space UI
			{
				displayname = "UI"
				icon = "objects-spaceship"

				section Visual_App
				{
					displayname = "Visual_App"
					icon = "tech-desktop"
					page Visual_App
					{
						icon = "tech-desktop"
					}
					designcomponent designcomponent1
					{
						type = separator
						separator = "line-with-text"
						text = "Add Client"
					}
					page Visual
					{
						icon = "media-1-3d"
					}
					designcomponent designcomponent2
					{
						type = separator
						separator = "line-with-text"
						text = "View Dashboard"
					}
					page Dashboard
					{
						icon = "ui-1-dashboard-half"
					}
				}
			}
			space Reports
			{
				displayname = "Reports"
				icon = "objects-spaceship"

					report Cllient_Report
					{
						icon = "tech-desktop"
					}
					report All_Estimate_Masters
					{
						icon = "tech-desktop"
					}
					report Recent_Works
					{
						icon = "sport-crown"
					}
			}
			preference
			{
				icon
				{
					style = solid
					show = space,section,component
				}
			}
		}
		customize
		{
			new theme = 11
			font = "lato"
			color options
			{
				color = blue
			}
			logo
			{
				preference = "none"
				placement = "left"
			}
		}
	}
	phone
	{
		forms
		{
			form Cllient
			{
				label placement = auto
			}
			form Estimate_Master
			{
				label placement = auto
			}
			form Rooms
			{
				label placement = auto
			}
			form Tiles_Showroom
			{
				label placement = auto
			}
		}
		customize
		{
			layout = slidingpane
			font = "default"
			style = "3"
			color options
			{
				color = amethyst
			}
			logo
			{
				preference = "none"
			}
		}
	}
	tablet
	{
		forms
		{
			form Cllient
			{
				label placement = auto
			}
			form Estimate_Master
			{
				label placement = auto
			}
			form Rooms
			{
				label placement = auto
			}
			form Tiles_Showroom
			{
				label placement = auto
			}
		}
		customize
		{
			layout = slidingpane
			font = "default"
			style = "3"
			color options
			{
				color = amethyst
			}
			logo
			{
				preference = "none"
			}
		}
	}
	translation
{
{"Language_Settings":{"LANGAGUE_WITH_LOGIN":"browser"}}
}
}
